trigger:
- none

pool: Asset Voyage

stages:
  - stage: Development
    displayName: Dev
    jobs:
      - deployment: Deploy
        displayName: Deploy Infrastructure
        environment: Dev
        variables:
          - group: Asset-Voyage-PreRequisites-NPD
          - group: Asset-Voyage-Common
          - group: Asset-Voyage-Dev
          - name: System.Debug
            value: true
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - task: FileTransform@1
                  displayName: 'Transform Parameter Json'
                  inputs:
                    folderPath: '$(System.DefaultWorkingDirectory)/SSE.AssetVoyage.Platform'
                    fileType: 'json'
                    targetFiles: '*.json'
                - task: PowerShell@2
                  displayName: 'Show Transformed Parameter Json'
                  inputs:
                    targetType: 'inline'
                    script: 'Get-Content -Path $(System.DefaultWorkingDirectory)/SSE.AssetVoyage.Platform/parameter.json'
                - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
                  displayName: Install Terraform 0.14.7
                  inputs:
                    terraformVersion: '0.14.7'
                - task: TerraformTaskV1@0
                  enabled: true
                  displayName: Terraform Init
                  inputs:
                    provider: 'azurerm'
                    command: 'init'
                    workingDirectory: 'SSE.AssetVoyage.Platform/Terraform'
                    backendServiceArm: 'SSE-Sub-FieldServicesGeoSafety-NPD-Connection'
                    backendAzureRmResourceGroupName: '$(PreRequisites.ResourceGroup.Name)'
                    backendAzureRmStorageAccountName: '$(PreRequisites.StorageAccount.Name)'
                    backendAzureRmContainerName: '$(PreRequisites.StorageAccount.Container.Name)'
                    backendAzureRmKey: '$(Environment.TFState.Name)'                                
                # - task: TerraformCLI@0
                #   inputs:
                #     command: 'import'
                #     workingDirectory: 'SSE.AssetVoyage.Platform/Terraform'
                #     commandOptions: '--var-file="$(System.DefaultWorkingDirectory)/SSE.AssetVoyage.Platform/parameter.json"'
                #     environmentServiceName: 'SSE-Sub-FieldServicesGeoSafety-NPD-Connection'                    
                #     resourceAddress: 'module.Security[0].azurerm_key_vault_secret.KeyVaultSecret["ResourceGroup"]'
                #     resourceId: 'https://assetvoyage-dev-001-kv.vault.azure.net/secrets/resource-group/c2e0540bd9644d3fad751b0934fef36e'                            
                - task: TerraformTaskV1@0
                  enabled: true
                  displayName: Terraform Plan
                  inputs:
                    provider: 'azurerm'
                    command: 'plan'
                    workingDirectory: 'SSE.AssetVoyage.Platform/Terraform'
                    commandOptions: '--var-file="$(System.DefaultWorkingDirectory)/SSE.AssetVoyage.Platform/parameter.json"'
                    environmentServiceNameAzureRM: 'SSE-Sub-FieldServicesGeoSafety-NPD-Connection'
                # - task: TerraformTaskV1@0
                #   enabled: true
                #   displayName: Terraform Apply
                #   inputs:
                #     provider: 'azurerm'
                #     command: 'apply'
                #     workingDirectory: 'SSE.AssetVoyage.Platform/Terraform'
                #     commandOptions: '--var-file="$(System.DefaultWorkingDirectory)/SSE.AssetVoyage.Platform/parameter.json"'
                #     environmentServiceNameAzureRM: 'SSE-Sub-FieldServicesGeoSafety-NPD-Connection'
  - stage: Test
    dependsOn: ''
    displayName: Tst
    jobs:
      - deployment: Deploy
        displayName: Deploy Infrastructure
        environment: Tst
        variables:
          - group: Asset-Voyage-PreRequisites-NPD
          - group: Asset-Voyage-Common
          - group: Asset-Voyage-Tst
          - name: System.Debug
            value: true
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - task: FileTransform@1
                  displayName: 'Transform Parameter Json'
                  inputs:
                    folderPath: '$(System.DefaultWorkingDirectory)/SSE.AssetVoyage.Platform'
                    fileType: 'json'
                    targetFiles: '*.json'
                - task: PowerShell@2
                  displayName: 'Show Transformed Parameter Json'
                  inputs:
                    targetType: 'inline'
                    script: 'Get-Content -Path $(System.DefaultWorkingDirectory)/SSE.AssetVoyage.Platform/parameter.json'
                - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
                  displayName: Install Terraform 0.14.7
                  inputs:
                    terraformVersion: '0.14.7'
                - task: TerraformTaskV1@0
                  enabled: true
                  displayName: Terraform Init
                  inputs:
                    provider: 'azurerm'
                    command: 'init'
                    workingDirectory: 'SSE.AssetVoyage.Platform/Terraform'
                    backendServiceArm: 'SSE-Sub-FieldServicesGeoSafety-NPD-Connection'
                    backendAzureRmResourceGroupName: '$(PreRequisites.ResourceGroup.Name)'
                    backendAzureRmStorageAccountName: '$(PreRequisites.StorageAccount.Name)'
                    backendAzureRmContainerName: '$(PreRequisites.StorageAccount.Container.Name)'
                    backendAzureRmKey: '$(Environment.TFState.Name)'
                - task: TerraformTaskV1@0
                  enabled: true
                  displayName: Terraform Plan
                  inputs:
                    provider: 'azurerm'
                    command: 'plan'
                    workingDirectory: 'SSE.AssetVoyage.Platform/Terraform'
                    commandOptions: '--var-file="$(System.DefaultWorkingDirectory)/SSE.AssetVoyage.Platform/parameter.json"'
                    environmentServiceNameAzureRM: 'SSE-Sub-FieldServicesGeoSafety-NPD-Connection'
                - task: TerraformTaskV1@0
                  enabled: true
                  displayName: Terraform Apply
                  inputs:
                    provider: 'azurerm'
                    command: 'apply'
                    workingDirectory: 'SSE.AssetVoyage.Platform/Terraform'
                    commandOptions: '--var-file="$(System.DefaultWorkingDirectory)/SSE.AssetVoyage.Platform/parameter.json"'
                    environmentServiceNameAzureRM: 'SSE-Sub-FieldServicesGeoSafety-NPD-Connection'
  - stage: UAT
    dependsOn: ''
    displayName: UAT
    jobs:
      - deployment: Deploy
        displayName: Deploy Infrastructure
        environment: UAT
        variables:
          - group: Asset-Voyage-PreRequisites-NPD
          - group: Asset-Voyage-Common
          - group: Asset-Voyage-UAT
          - name: System.Debug
            value: true
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - task: FileTransform@1
                  displayName: 'Transform Parameter Json'
                  inputs:
                    folderPath: '$(System.DefaultWorkingDirectory)/SSE.AssetVoyage.Platform'
                    fileType: 'json'
                    targetFiles: '*.json'
                - task: PowerShell@2
                  displayName: 'Show Transformed Parameter Json'
                  inputs:
                    targetType: 'inline'
                    script: 'Get-Content -Path $(System.DefaultWorkingDirectory)/SSE.AssetVoyage.Platform/parameter.json'
                - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
                  displayName: Install Terraform 0.14.7
                  inputs:
                    terraformVersion: '0.14.7'
                - task: TerraformTaskV1@0
                  enabled: true
                  displayName: Terraform Init
                  inputs:
                    provider: 'azurerm'
                    command: 'init'
                    workingDirectory: 'SSE.AssetVoyage.Platform/Terraform'
                    backendServiceArm: 'SSE-Sub-FieldServicesGeoSafety-NPD-Connection'
                    backendAzureRmResourceGroupName: '$(PreRequisites.ResourceGroup.Name)'
                    backendAzureRmStorageAccountName: '$(PreRequisites.StorageAccount.Name)'
                    backendAzureRmContainerName: '$(PreRequisites.StorageAccount.Container.Name)'
                    backendAzureRmKey: '$(Environment.TFState.Name)'
                - task: TerraformTaskV1@0
                  enabled: true
                  displayName: Terraform Plan
                  inputs:
                    provider: 'azurerm'
                    command: 'plan'
                    workingDirectory: 'SSE.AssetVoyage.Platform/Terraform'
                    commandOptions: '--var-file="$(System.DefaultWorkingDirectory)/SSE.AssetVoyage.Platform/parameter.json"'
                    environmentServiceNameAzureRM: 'SSE-Sub-FieldServicesGeoSafety-NPD-Connection'
                - task: TerraformTaskV1@0
                  enabled: true
                  displayName: Terraform Apply
                  inputs:
                    provider: 'azurerm'
                    command: 'apply'
                    workingDirectory: 'SSE.AssetVoyage.Platform/Terraform'
                    commandOptions: '--var-file="$(System.DefaultWorkingDirectory)/SSE.AssetVoyage.Platform/parameter.json"'
                    environmentServiceNameAzureRM: 'SSE-Sub-FieldServicesGeoSafety-NPD-Connection'